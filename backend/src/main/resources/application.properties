spring.application.name=backend
spring.profiles.active=dev
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/paf
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
server.port=8082

# Static resource configuration
spring.web.resources.static-locations=classpath:/static/,file:src/main/resources/static/
spring.mvc.static-path-pattern=/uploads/**

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
app.upload.dir=${UPLOAD_DIR:src/main/resources/static/uploads/profile-pictures/}

# CORS Configuration
app.cors.allowed-origins=${FRONTEND_URL:http://localhost:5173}

## JWT Configuration
#app.jwt.secret=${JWT_SECRET:defaultSecretKey}
#app.jwt.expiration=${JWT_EXPIRATION:86400000}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:624845603618-2aivheuaub5sm9id3hp1lun41our6nlk.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
spring.security.oauth2.client.registration.google.scope=email,profile



# Frontend URL for redirect
frontend.url=${FRONTEND_URL:http://localhost:5173}